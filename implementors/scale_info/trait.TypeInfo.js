(function() {var implementors = {
"madara_runtime":[["impl TypeInfo for <a class=\"enum\" href=\"madara_runtime/enum.RuntimeCall.html\" title=\"enum madara_runtime::RuntimeCall\">RuntimeCall</a>"],["impl TypeInfo for <a class=\"struct\" href=\"madara_runtime/struct.Runtime.html\" title=\"struct madara_runtime::Runtime\">Runtime</a>"],["impl TypeInfo for <a class=\"struct\" href=\"madara_runtime/opaque/struct.SessionKeys.html\" title=\"struct madara_runtime::opaque::SessionKeys\">SessionKeys</a>"],["impl TypeInfo for <a class=\"enum\" href=\"madara_runtime/enum.RuntimeSlashReason.html\" title=\"enum madara_runtime::RuntimeSlashReason\">RuntimeSlashReason</a>"],["impl TypeInfo for <a class=\"enum\" href=\"madara_runtime/enum.RuntimeFreezeReason.html\" title=\"enum madara_runtime::RuntimeFreezeReason\">RuntimeFreezeReason</a>"],["impl TypeInfo for <a class=\"enum\" href=\"madara_runtime/enum.RuntimeHoldReason.html\" title=\"enum madara_runtime::RuntimeHoldReason\">RuntimeHoldReason</a>"],["impl TypeInfo for <a class=\"enum\" href=\"madara_runtime/enum.RuntimeError.html\" title=\"enum madara_runtime::RuntimeError\">RuntimeError</a>"],["impl TypeInfo for <a class=\"enum\" href=\"madara_runtime/enum.RuntimeEvent.html\" title=\"enum madara_runtime::RuntimeEvent\">RuntimeEvent</a>"],["impl TypeInfo for <a class=\"enum\" href=\"madara_runtime/enum.OriginCaller.html\" title=\"enum madara_runtime::OriginCaller\">OriginCaller</a>"],["impl TypeInfo for <a class=\"enum\" href=\"madara_runtime/enum.RuntimeLockId.html\" title=\"enum madara_runtime::RuntimeLockId\">RuntimeLockId</a>"]],
"mp_felt":[["impl TypeInfo for <a class=\"struct\" href=\"mp_felt/struct.Felt252Wrapper.html\" title=\"struct mp_felt::Felt252Wrapper\">Felt252Wrapper</a>"]],
"mp_simulations":[["impl TypeInfo for <a class=\"struct\" href=\"mp_simulations/struct.SimulationFlags.html\" title=\"struct mp_simulations::SimulationFlags\">SimulationFlags</a>"],["impl TypeInfo for <a class=\"struct\" href=\"mp_simulations/struct.PlaceHolderErrorTypeForFailedStarknetExecution.html\" title=\"struct mp_simulations::PlaceHolderErrorTypeForFailedStarknetExecution\">PlaceHolderErrorTypeForFailedStarknetExecution</a>"]],
"mp_transactions":[["impl TypeInfo for <a class=\"enum\" href=\"mp_transactions/enum.TxType.html\" title=\"enum mp_transactions::TxType\">TxType</a>"]],
"pallet_starknet":[["impl TypeInfo for <a class=\"struct\" href=\"pallet_starknet/types/struct.TransactionOutput.html\" title=\"struct pallet_starknet::types::TransactionOutput\">TransactionOutput</a>"],["impl TypeInfo for <a class=\"struct\" href=\"pallet_starknet/types/struct.DeployAccountTransactionOutput.html\" title=\"struct pallet_starknet::types::DeployAccountTransactionOutput\">DeployAccountTransactionOutput</a>"],["impl&lt;T&gt; TypeInfo for <a class=\"enum\" href=\"pallet_starknet/pallet/enum.Error.html\" title=\"enum pallet_starknet::pallet::Error\">Error</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;T&gt;: TypeInfo + 'static,\n    T: 'static,</span>"],["impl&lt;T&gt; TypeInfo for <a class=\"enum\" href=\"pallet_starknet/pallet/enum.Call.html\" title=\"enum pallet_starknet::pallet::Call\">Call</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/marker/struct.PhantomData.html\" title=\"struct core::marker::PhantomData\">PhantomData</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(T,)</a>&gt;: TypeInfo + 'static,\n    T: <a class=\"trait\" href=\"pallet_starknet/pallet/trait.Config.html\" title=\"trait pallet_starknet::pallet::Config\">Config</a> + 'static,</span>"]],
"pallet_starknet_runtime_api":[["impl TypeInfo for <a class=\"enum\" href=\"pallet_starknet_runtime_api/enum.StarknetTransactionExecutionError.html\" title=\"enum pallet_starknet_runtime_api::StarknetTransactionExecutionError\">StarknetTransactionExecutionError</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()